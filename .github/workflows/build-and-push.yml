name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'servers/**'
      - '.github/workflows/build-and-push.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'servers/**'
      - '.github/workflows/build-and-push.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: memenow

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service:
          - name: mcp-neo4j-cypher
            dockerfile: servers/mcp-neo4j-cypher/Dockerfile
            context: servers/mcp-neo4j-cypher
          - name: mcp-neo4j-memory
            dockerfile: servers/mcp-neo4j-memory/Dockerfile
            context: servers/mcp-neo4j-memory
          - name: mcp-neo4j-data-modeling
            dockerfile: servers/mcp-neo4j-data-modeling/Dockerfile
            context: servers/mcp-neo4j-data-modeling
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64